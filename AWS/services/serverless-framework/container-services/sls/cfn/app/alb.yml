LoadBalancer:
  Type: AWS::ElasticLoadBalancingV2::LoadBalancer
  Properties:
    Type: application
    LoadBalancerAttributes:
      - Key: deletion_protection.enabled
        Value: true
    Scheme: internet-facing
    SecurityGroups:
      - !Ref LoadBalancerSecurityGroup
    Subnets: !Ref VpcPublicSubnetIds
  Metadata: /${self:provider.stackName}/ALB/Resource


LoadBalancerSecurityGroup:
  Type: AWS::EC2::SecurityGroup
  Properties:
    GroupDescription: ${self:service} ${self:provider.stage} Security Group for ELB
    SecurityGroupIngress:
      - CidrIp: 0.0.0.0/0
        Description: Allow HTTP
        IpProtocol: tcp
        FromPort: 80
        ToPort: 80
      - CidrIp: 0.0.0.0/0
        Description: Allow HTTPS
        IpProtocol: tcp
        FromPort: 443
        ToPort: 443
    SecurityGroupEgress:
      - CidrIp: 0.0.0.0/0
        Description: Load balancer to target
        IpProtocol: tcp
        FromPort: 3000
        ToPort: 3000
    VpcId: !Ref VpcId
  Metadata: /${self:provider.stackName}/ALB/Resource


HTTPListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
    LoadBalancerArn: !Ref LoadBalancer
    Protocol: HTTP
    Port: 80
    DefaultActions:
      - Type: redirect
        RedirectConfig:
          Protocol: HTTPS
          Port: 443
          Host: "#{host}"
          Path: "/#{path}"
          Query: "#{query}"
          StatusCode: HTTP_301
  Metadata: /${self:provider.stackName}/ALB/Resource


HTTPSListener:
  Type: AWS::ElasticLoadBalancingV2::Listener
  Properties:
    LoadBalancerArn: !Ref LoadBalancer
    Protocol: HTTPS
    Port: 443
    DefaultActions:
      - TargetGroupArn: !Ref ListenerTargetGroup
        Type: forward
    SslPolicy: ELBSecurityPolicy-2016-08
    Certificates:
      - CertificateArn: ${file(./cfn/.configs/${self:provider.stage}.yml):ACM.CertificateArn}
  Metadata: /${self:provider.stackName}/ALB/Resource


ListenerTargetGroup:
  Type: AWS::ElasticLoadBalancingV2::TargetGroup
  Properties:
    HealthCheckPath: "/v1/health"
    Port: 3000
    Protocol: HTTP
    TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
      - Key: stickiness.enabled
        Value: false
    TargetType: ip
    VpcId: !Ref VpcId
  Metadata: /${self:provider.stackName}/ALB/Resource
