# __author__ = "AnhLT59"
# __version__ = "1.0"
# __created_date__ = "2021/03/03"
#
# Defined AWS Services
# - IAM
# - ECS
# - AutoScale
# - ALB
# - Route53

service: demo-app

provider:
  name: aws
  stage: ${opt:stage, "development"}
  region: ${opt:region, self:custom.default.region}
  stackName: ${self:service}-${self:provider.stage}

  # default tags for all resources
  tags:
    Owner: ${self:service}
    Stage: ${self:provider.stage}
  stackTags:
    Owner: ${self:service}
    Stage: ${self:provider.stage}

  # S3 bucket where the artifact is stored
  deploymentBucket: ${file(./cfn/.configs/${self:provider.stage}.yml):S3.deployment_bucket}

custom:
  default: ${file(./cfn/.configs/${self:provider.stage}.yml):default}
  ECS: ${file(./cfn/.configs/${self:provider.stage}.yml):ECS}
  NetworkStack: demo-network-${self:provider.stage}
  ResourcesStack: demo-resources-${self:provider.stage}

resources:
  Parameters:
    VpcId:
      Default: ${cf:${self:custom.NetworkStack}.VpcId}
      Description: VPC Id
      Type: String
    VpcAppSubnetIds:
      Default: ${cf:${self:custom.NetworkStack}.AppSubnet1Id},${cf:${self:custom.NetworkStack}.AppSubnet2Id}
      Description: VPC Subnet Ids
      Type: CommaDelimitedList
    VpcPublicSubnetIds:
      Default: ${cf:${self:custom.NetworkStack}.PublicSubnet1Id},${cf:${self:custom.NetworkStack}.PublicSubnet2Id}
      Description: VPC Subnet Ids
      Type: CommaDelimitedList
    EcrRepositoryName:
      Default: ${cf:${self:custom.ResourcesStack}.EcrRepositoryName}
      Description: Image tag to deploy
      Type: String
    ImageTag:
      Default: ${ssm:/${self:service}/${self:provider.stage}/ImageTag}
      Description: Image tag to deploy
      Type: String

  Resources:
    # IAM
    ECSRole: ${file(./cfn/app/iam.yml):ECSRole}
    ECSPolicy: ${file(./cfn/app/iam.yml):ECSPolicy}
    ECSTaskRole: ${file(./cfn/app/iam.yml):ECSTaskRole}
    ECSTaskPolicy: ${file(./cfn/app/iam.yml):ECSTaskPolicy}
    AutoScalingRole: ${file(./cfn/app/iam.yml):AutoScalingRole}

    # ECS
    ECSCluster: ${file(./cfn/app/ecs.yml):ECSCluster}
    ECSTaskDefinition: ${file(./cfn/app/ecs.yml):ECSTaskDefinition}
    ECSService: ${file(./cfn/app/ecs.yml):ECSService}
    ECSInstanceSecurityGroup: ${file(./cfn/app/ecs.yml):ECSInstanceSecurityGroup}

    # cloudwatch log
    CloudwatchLogGroup: ${file(./cfn/app/log.yml):CloudwatchLogGroup}

    # ALB
    LoadBalancer: ${file(./cfn/app/alb.yml):LoadBalancer}
    LoadBalancerSecurityGroup: ${file(./cfn/app/alb.yml):LoadBalancerSecurityGroup}
    ListenerTargetGroup: ${file(./cfn/app/alb.yml):ListenerTargetGroup}
    HTTPListener: ${file(./cfn/app/alb.yml):HTTPListener}
    HTTPSListener: ${file(./cfn/app/alb.yml):HTTPSListener}

    # auto scaling
    AutoScalingTarget: ${file(./cfn/app/scale.yml):AutoScalingTarget}
    AutoScalingPolicy: ${file(./cfn/app/scale.yml):AutoScalingPolicy}

    # route53
    AppRecordSet: ${file(./cfn/app/route53.yml):AppRecordSet}

  Outputs:
    EcsClusterArn:
      Value: !GetAtt ECSCluster.Arn

  extensions:
    # IAM
    ECSRole:
      Metadata: /${self:provider.stackName}/IAM/Resource
    ECSPolicy: ${file(./cfn/app/iam.yml):ECSPolicy}
    ECSTaskRole: ${file(./cfn/app/iam.yml):ECSTaskRole}
    ECSTaskPolicy: ${file(./cfn/app/iam.yml):ECSTaskPolicy}
    AutoScalingRole: ${file(./cfn/app/iam.yml):AutoScalingRole}

    # ECS
    ECSCluster: ${file(./cfn/app/ecs.yml):ECSCluster}
    ECSTaskDefinition: ${file(./cfn/app/ecs.yml):ECSTaskDefinition}
    ECSService: ${file(./cfn/app/ecs.yml):ECSService}
    ECSInstanceSecurityGroup: ${file(./cfn/app/ecs.yml):ECSInstanceSecurityGroup}

    # cloudwatch log
    CloudwatchLogGroup: ${file(./cfn/app/log.yml):CloudwatchLogGroup}

    # ALB
    LoadBalancer: ${file(./cfn/app/alb.yml):LoadBalancer}
    LoadBalancerSecurityGroup: ${file(./cfn/app/alb.yml):LoadBalancerSecurityGroup}
    ListenerTargetGroup: ${file(./cfn/app/alb.yml):ListenerTargetGroup}
    HTTPListener: ${file(./cfn/app/alb.yml):HTTPListener}
    HTTPSListener: ${file(./cfn/app/alb.yml):HTTPSListener}

    # auto scaling
    AutoScalingTarget: ${file(./cfn/app/scale.yml):AutoScalingTarget}
    AutoScalingPolicy: ${file(./cfn/app/scale.yml):AutoScalingPolicy}

    # route53
    AppRecordSet: ${file(./cfn/app/route53.yml):AppRecordSet}
