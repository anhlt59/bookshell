Description: Create Web servers and ELB

Parameters:
  VPCID:
    Type: "AWS::EC2::VPC::Id"
    Description: Enter a valid VPC Id
  PrivateSubnet1:
    Type: "AWS::EC2::Subnet::Id"
    Description: Enter a valid SubnetId of private subnet in AZ1
  PrivateSubnet2:
    Type: "AWS::EC2::Subnet::Id"
    Description: Enter a valid SubnetId of private subnet in AZ1
  PublicSubnet1:
    Type: "AWS::EC2::Subnet::Id"
    Description: Enter a valid SubnetId of public subnet in AZ1
  PublicSubnet2:
    Type: "AWS::EC2::Subnet::Id"
    Description: Enter a valid SubnetId of public subnet in AZ1
  KeyPair:
    Type: "AWS::EC2::KeyPair::KeyName"
    Description: Enter a valid KeyPair Name
  AMIId:
    Type: "AWS::EC2::Image::Id"
    Description: Enter a valid AMI ID to launch the instance
  WebSG:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: Enter a valid security group ID for web server
  DBClientSG:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: Enter a valid security group ID for web server to enable DB access
  ELBSG:
    Type: "AWS::EC2::SecurityGroup::Id"
    Description: Enter a valid security group ID for ELB
  WebIAMProfile:
    Type: String
    Description: Enter ARN of IAM Instance Profile to be attached to web server
  WebInstanceType:
    Type: String
    Description: Enter one of the possible instance type for web server
    AllowedValues:
      - t2.large
      - m4.large
      - m4.xlarge
      - c4.large
      - t2.micro
      - t2.nano
      - t3.medium
      - t2.medium
  WebMinSize:
    Type: String
    Description: Minimum number of instances in auto scaling group
  WebMaxSize:
    Type: String
    Description: Maximum number of instances in auto scaling group
  Environment:
    Type: String
    Description: Select the appropriate environment
    AllowedValues:
      - dev
      - test
      - uat
      - staging
      - honban
      - prod

Resources:
  WebELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: 
        Fn::Sub: webelb-${Environment}
      Subnets: 
      - Ref: PublicSubnet1
      - Ref: PublicSubnet2
      SecurityGroups:
        - !Ref ELBSG
      Tags:
        - Key: Name
          Value:
            Fn::Sub: webelb-${Environment}

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref WebELB
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub ${Environment}-default
      VpcId: !Ref VPCID
      Port: 80
      Protocol: HTTP
      
  WebServerLaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      KeyName:
        Ref: KeyPair
      ImageId:
        Ref: AMIId
      SecurityGroups:
        - Ref: WebSG
        - Ref: DBClientSG
      InstanceType:
        Ref: WebInstanceType
      IamInstanceProfile:
        Ref: WebIAMProfile

  WebServerASG:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      VPCZoneIdentifier:
        - Ref: PrivateSubnet1
        - Ref: PrivateSubnet2
      LaunchConfigurationName:
        Ref: "WebServerLaunchConfig"
      MinSize:
        Ref: WebMinSize
      MaxSize:
        Ref: WebMaxSize
      TargetGroupARNs:
        - Ref: DefaultTargetGroup
      Tags:
        - Key: Name
          Value:
            Fn::Sub: webelb-${Environment}
          PropagateAtLaunch: true

Outputs:
  WebELBURL:
      Description: "URL endpoint of web ELB"
      Value:
        Fn::GetAtt: [ WebELB, DNSName ]
