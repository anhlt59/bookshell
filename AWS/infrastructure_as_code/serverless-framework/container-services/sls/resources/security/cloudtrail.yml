CloudTrailBucket:
  Type: AWS::S3::Bucket
  DeletionPolicy: Retain
  UpdateReplacePolicy: Retain
  Properties:
    BucketName: ${self:provider.tags.Owner}-cloudtrail-logs
    PublicAccessBlockConfiguration:
      BlockPublicAcls: true
      BlockPublicPolicy: true
      IgnorePublicAcls: true
      RestrictPublicBuckets: true

CloudTrailBucketPolicy:
  Type: AWS::S3::BucketPolicy
  Properties:
    Bucket: !Ref CloudTrailBucket
    PolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:GetBucketAcl
          Resource: !Sub arn:${AWS::Partition}:s3:::${CloudTrailBucket}
        - Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: s3:PutObject
          Resource: !Sub 'arn:${AWS::Partition}:s3:::${CloudTrailBucket}/AWSLogs/${AWS::AccountId}/*'
          Condition:
            StringEquals:
              's3:x-amz-acl': 'bucket-owner-full-control'

CloudTrailLogGroup:
  Type: AWS::Logs::LogGroup
  Properties:
    LogGroupName: ${self:provider.tags.Owner}-cloudtrail-logs

CloudTrailLogRole:
  Type: AWS::IAM::Role
  Properties:
    AssumeRolePolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: sts:AssumeRole
    Policies:
      - PolicyName: ${self:provider.tags.Owner}-cloudtrail-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: !GetAtt CloudTrailLogGroup.Arn

CloudTrailKey:
  Type: AWS::KMS::Key
  Properties:
    Description: The key created by CloudTrail to encrypt log files.
    EnableKeyRotation: true
    KeyPolicy:
      Version: '2012-10-17'
      Id: Key policy created by CloudTrail
      Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
          Action: 'kms:*'
          Resource: '*'
        - Sid: Allow CloudTrail to encrypt logs
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: 'kms:GenerateDataKey*'
          Resource: '*'
          Condition:
            StringLike:
              'kms:EncryptionContext:aws:cloudtrail:arn': !Sub 'arn:${AWS::Partition}:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow CloudTrail to describe key
          Effect: Allow
          Principal:
            Service: cloudtrail.amazonaws.com
          Action: 'kms:DescribeKey'
          Resource: '*'
        - Sid: Allow principals in the account to decrypt log files
          Effect: Allow
          Principal:
            AWS: '*'
          Action:
            - 'kms:Decrypt'
            - 'kms:ReEncryptFrom'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:CallerAccount': !Ref AWS::AccountId
            StringLike:
              'kms:EncryptionContext:aws:cloudtrail:arn': !Sub 'arn:${AWS::Partition}:cloudtrail:*:${AWS::AccountId}:trail/*'
        - Sid: Allow alias creation during setup
          Effect: Allow
          Principal:
            AWS: '*'
          Action: 'kms:CreateAlias'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:CallerAccount': !Ref AWS::AccountId
              'kms:ViaService': !Sub 'ec2.${AWS::Region}${AWS::URLSuffix}'
        - Sid: Enable cross account log decryption
          Effect: Allow
          Principal:
            AWS: '*'
          Action:
            - 'kms:Decrypt'
            - 'kms:ReEncryptFrom'
          Resource: '*'
          Condition:
            StringEquals:
              'kms:CallerAccount': !Ref AWS::AccountId
            StringLike:
              'kms:EncryptionContext:aws:cloudtrail:arn': !Sub 'arn:${AWS::Partition}:cloudtrail:*:${AWS::AccountId}:trail/*'

CloudTrailKeyAlias:
  Type: AWS::KMS::Alias
  Properties:
    AliasName: alias/${self:provider.tags.Owner}-cloudtrail-key
    TargetKeyId: !Ref CloudTrailKey

CloudTrail:
  Type: AWS::CloudTrail::Trail
  Properties:
    CloudWatchLogsLogGroupArn: !GetAtt CloudTrailLogGroup.Arn
    CloudWatchLogsRoleArn: !GetAtt CloudTrailLogRole.Arn
    EnableLogFileValidation: true
    EventSelectors:
      - DataResources:
          - Type: AWS::Lambda::Function
            Values:
              - !Sub 'arn:${AWS::Partition}:lambda'
      - DataResources:
          - Type: AWS::S3::Object
            Values:
              - !Sub 'arn:${AWS::Partition}:s3:::'
    IncludeGlobalServiceEvents: true
    IsLogging: true
    KMSKeyId: !Ref CloudTrailKeyAlias
    S3BucketName: !Ref CloudTrailBucket
    TrailName: ${self:provider.tags.Owner}-cloudtrail
